version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    image: 'bitnami/rabbitmq:3.8.9'
    environment:
      - RABBITMQ_USERNAME=${App__RabbitMQ__Username}
      - RABBITMQ_PASSWORD=${App__RabbitMQ__Password}
    ports:
      - 5672:5672
      - 5671:5671
      - 15672:15672
    networks:
      rabbitmq-network:

  db:
    container_name: database
    build:
      context: .
      dockerfile: Data/Dockerfile
    environment:
      - MSSQL_SA_PASSWORD=Dexcelence!1
    networks:
      mssql-network:

  identity:
    container_name: identity
    restart: on-failure
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile.dev
    depends_on:
      - db
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Database=identity;User=sa;Password=Dexcelence!1;
      - App__Self__IssuerUri=https://identity:5005
      - App__Api__DeXApiUrl=https://api:5009
      - ASPNETCORE_URLS=http://+:5004;https://+:5005;
      - ASPNETCORE_HTTPS_PORT=5005
      - ASPNETCORE_Kestrel__Certificates__Default__Password=W64x4AD8dNj9kImdX3tayS
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/dex-identity.pfx
    networks:
      mssql-network:
    ports:
      - 5004:5004
      - 5005:5005

  notificationservice:
    container_name: notificationservice
    restart: on-failure
    build:
      context: .
      dockerfile: NotificationSystem/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
      - App__SendGrid__ApiKey=${App__SendGrid__ApiKey}
      - App__SendGrid__EmailFrom=${App__SendGrid__EmailFrom}
    stdin_open: true
    tty: true
    networks:
      rabbitmq-network:

  elasticsynchronizer:
    container_name: elasticsynchronizer
    restart: on-failure
    build: 
      context: .
      dockerfile: ElasticSynchronizer/Dockerfile
    depends_on: 
      - rabbitmq
    environment:
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
      - App__Elastic__Hostname=${App__Elastic__Hostname}
      - App__Elastic__Username=${App__Elastic__Username}
      - App__Elastic__Password=${App__Elastic__Password}
      - App__Elastic__IndexUrl=${App__Elastic__IndexUrl}
    networks:
      rabbitmq-network:  

  api:
    container_name: api
    restart: on-failure
    build:
      context: .
      dockerfile: API/Dockerfile.dev
    depends_on:
      - db
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Database=master;User=sa;Password=Dexcelence!1;
      - App__IdentityServer__IdentityUrl=http://identity:5004
      - ASPNETCORE_URLS=http://+:5008;https://+:5009;
      - ASPNETCORE_HTTPS_PORT=5009
      - ASPNETCORE_Kestrel__Certificates__Default__Password=xI90DrNea7M6UJFNDwip6t
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/dex-api.pfx
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
    networks:
      mssql-network:
      rabbitmq-network:
    ports:
      - 5008:5008
      - 5009:5009

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.10.0
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/config/analysis/wn_s.txt
        target: /usr/share/elasticsearch/config/analysis/wn_s.txt
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      mssql-network:

volumes:
  elasticsearch:  


networks:
  mssql-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
  rabbitmq-network:
    driver: bridge


